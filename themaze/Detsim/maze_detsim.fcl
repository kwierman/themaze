#include "maze_services.fcl"
#include "detsimmodules.fcl"



#include "triggersim_microboone.fcl"
#include "time_memory_tracker_microboone.fcl"
#include "swtrigger_microboone.fcl"

BEGIN_PROLOG
  maze_simwire:
  {
    module_type: "SimWire"
  }

END_PROLOG



process_name: Detsim

services:
{
  scheduler:    { defaultExceptions: false } 
  TFileService: { fileName: "g4.root" }
  TimeTracker:  {}
  MemoryTracker:     { ignoreTotal: 1 }
  RandomNumberGenerator: {}
  @table::maze_basic_services
}

source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
  saveMemoryObjectThreshold: 0
}

physics:
{

 producers:
 {
   triggersim:     @local::ubtrigger_dark_bnb
   daq:            @local::standard_simwire
   rns:            { module_type: "RandomNumberSaver" }
 }

 filters: { swtrigger: @local::microboone_swtrigger_mc_bnb }
 
 simulate: [ rns, optdigitizer, optfem, triggersim, pmtreadout, daq, swtrigger ]
 
 stream1:  [ out1 ]

 trigger_paths: [simulate] 

 end_paths:     [stream1]  
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_detsim.root"
   saveMemoryObjectThreshold: 0
   compressionLevel: 1
   fastCloning: false
 }
}

